# POSIX Hardening Ansible Inventory
# Configure your target servers here

[production]
# Production servers - full hardening
# server1.example.com ansible_host=192.168.1.10 ansible_port=22 ansible_user=admin
# server2.example.com ansible_host=192.168.1.11 ansible_port=22 ansible_user=admin

[staging]
# Staging servers - test hardening first
# staging.example.com ansible_host=192.168.2.10 ansible_port=22 ansible_user=admin

[test]
# Test servers - dry run testing
# test.example.com ansible_host=192.168.3.10 ansible_port=22 ansible_user=testuser

# Group all servers
[all_servers:children]
production
staging
test

# Variables for all servers
[all_servers:vars]
ansible_python_interpreter=/usr/bin/python3
ansible_become_method=sudo
ansible_become_pass={{ vault_sudo_pass }}

# Production-specific variables
[production:vars]
dry_run=0
run_full_hardening=true
enable_emergency_ssh=true
remove_emergency_ssh=false
admin_ip=YOUR_ADMIN_IP_HERE

# Staging-specific variables
[staging:vars]
dry_run=0
run_full_hardening=true
enable_emergency_ssh=true
remove_emergency_ssh=true
admin_ip=YOUR_ADMIN_IP_HERE

# Test-specific variables
[test:vars]
dry_run=1
run_full_hardening=false
enable_emergency_ssh=true
remove_emergency_ssh=true

# SSH connection settings
[all:vars]
ansible_ssh_common_args='-o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null'
ansible_connection=ssh
ansible_timeout=30

# Hardening configuration defaults
admin_ip=""
emergency_ssh_port=2222
ssh_allow_users=""
ssh_allow_groups=""
firewall_timeout=300
backup_retention_days=30